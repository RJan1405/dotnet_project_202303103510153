@model EventTicketingSystem.Models.Event
@{
    ViewData["Title"] = Model.Title;
}

<div class="row">
    <div class="col-md-8">
        <h1>@Model.Title</h1>
        <p class="lead">@Model.Description</p>
        
        <div class="card mb-4">
            <div class="card-body">
                <h5 class="card-title">Event Details</h5>
                <p><i class="bi bi-calendar"></i> <strong>Date:</strong> @Model.Date.ToString("dddd, dd MMMM yyyy")</p>
                <p><i class="bi bi-clock"></i> <strong>Time:</strong> @Model.Date.ToString("h:mm tt")</p>
                <p><i class="bi bi-cash"></i> <strong>Price:</strong> @Model.Price.ToString("C")</p>
                
                <div class="alert alert-info">
                    <div class="countdown-timer" data-deadline="@Model.RegistrationDeadline.ToString("yyyy-MM-ddTHH:mm:ss")">
                        <i class="bi bi-hourglass-split"></i> Registration closes in: <span class="countdown-value">Loading...</span>
                    </div>
                </div>
            </div>
        </div>
        
        @if (User.Identity.IsAuthenticated)
        {
            <a asp-controller="Registration" asp-action="Register" asp-route-eventId="@Model.Id" class="btn btn-primary btn-lg">Register for this Event</a>
        }
        else
        {
            <div class="alert alert-warning">
                Please <a asp-controller="Account" asp-action="Login">log in</a> to register for this event.
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        // Countdown timer functionality
        document.addEventListener('DOMContentLoaded', function () {
            const countdownTimers = document.querySelectorAll('.countdown-timer');
            
            countdownTimers.forEach(timer => {
                const deadlineStr = timer.getAttribute('data-deadline');
                const deadline = new Date(deadlineStr).getTime();
                const countdownValue = timer.querySelector('.countdown-value');
                
                function updateCountdown() {
                    const now = new Date().getTime();
                    const distance = deadline - now;
                    
                    if (distance < 0) {
                        countdownValue.innerHTML = "Registration closed";
                        timer.classList.add('text-danger');
                        return;
                    }
                    
                    const days = Math.floor(distance / (1000 * 60 * 60 * 24));
                    const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
                    const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
                    const seconds = Math.floor((distance % (1000 * 60)) / 1000);
                    
                    countdownValue.innerHTML = `${days}d ${hours}h ${minutes}m ${seconds}s`;
                }
                
                updateCountdown();
                setInterval(updateCountdown, 1000);
            });
        });
    </script>
}